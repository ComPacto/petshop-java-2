/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import modelo.ClienteVO;
import servicos.ClienteServicos;

/**
 *
 * @author ASUS
 */
public class GUICadCliente extends javax.swing.JInternalFrame {

    /**
     * Creates new form GuiCadCliente
     */
    public GUICadCliente() {
        initComponents();
        jtNome.grabFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlDados = new javax.swing.JLayeredPane();
        jlNome = new javax.swing.JLabel();
        jlEndereco = new javax.swing.JLabel();
        jlComplemento = new javax.swing.JLabel();
        jlNumero = new javax.swing.JLabel();
        jlCpf = new javax.swing.JLabel();
        jtNome = new javax.swing.JTextField();
        jtEndereco = new javax.swing.JTextField();
        jtComplemento = new javax.swing.JTextField();
        jtNumero = new javax.swing.JTextField();
        jtCpf = new javax.swing.JTextField();
        jlConfirmacao = new javax.swing.JLayeredPane();
        jbCadastrar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro do Cliente");

        jlDados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jlNome.setText("Nome:");

        jlEndereco.setText("Endere√ßo:");

        jlComplemento.setText("Complemento:");

        jlNumero.setText("Telefone:");

        jlCpf.setText("CPF:");

        jtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNomeFocusLost(evt);
            }
        });
        jtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNomeKeyPressed(evt);
            }
        });

        jtEndereco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtEnderecoFocusLost(evt);
            }
        });
        jtEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtEnderecoKeyPressed(evt);
            }
        });

        jtComplemento.setText("Casa");
        jtComplemento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtComplementoFocusLost(evt);
            }
        });
        jtComplemento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtComplementoKeyPressed(evt);
            }
        });

        jtNumero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNumeroFocusLost(evt);
            }
        });
        jtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNumeroKeyPressed(evt);
            }
        });

        jtCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCpfFocusLost(evt);
            }
        });
        jtCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtCpfKeyPressed(evt);
            }
        });

        jlDados.setLayer(jlNome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jlEndereco, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jlComplemento, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jlNumero, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jlCpf, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jtNome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jtEndereco, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jtComplemento, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jtNumero, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jtCpf, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlDadosLayout = new javax.swing.GroupLayout(jlDados);
        jlDados.setLayout(jlDadosLayout);
        jlDadosLayout.setHorizontalGroup(
            jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlDadosLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlCpf)
                    .addComponent(jlNumero)
                    .addComponent(jlComplemento)
                    .addComponent(jlEndereco)
                    .addComponent(jlNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtNome)
                    .addComponent(jtEndereco)
                    .addComponent(jtComplemento, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addComponent(jtNumero)
                    .addComponent(jtCpf))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jlDadosLayout.setVerticalGroup(
            jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlDadosLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNome)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlEndereco)
                    .addComponent(jtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlComplemento)
                    .addComponent(jtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNumero)
                    .addComponent(jtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCpf)
                    .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jlConfirmacao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbCadastrar.setText("Cadastrar");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });
        jbCadastrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCadastrarKeyPressed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });
        jbLimpar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbLimparKeyPressed(evt);
            }
        });

        jlConfirmacao.setLayer(jbCadastrar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlConfirmacao.setLayer(jbLimpar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlConfirmacaoLayout = new javax.swing.GroupLayout(jlConfirmacao);
        jlConfirmacao.setLayout(jlConfirmacaoLayout);
        jlConfirmacaoLayout.setHorizontalGroup(
            jlConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlConfirmacaoLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jbCadastrar)
                .addGap(40, 40, 40)
                .addComponent(jbLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jlConfirmacaoLayout.setVerticalGroup(
            jlConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlConfirmacaoLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jlConfirmacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCadastrar)
                    .addComponent(jbLimpar))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlDados)
                    .addComponent(jlConfirmacao))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlConfirmacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void cadastrar() {
        try {
            ClienteVO cVO = new ClienteVO();
            cVO.setNome(jtNome.getText());
            cVO.setEndereco(jtEndereco.getText());
            cVO.setComplemento(jtComplemento.getText());
            cVO.setNumero(Integer.parseInt(jtNumero.getText()));
            cVO.setCpf(Integer.parseInt(jtCpf.getText()));
            
            //Enviando o objeto pVO para o banco de dados
            ClienteServicos cs = servicos.ServicosFactory.getClienteServicos();
            //Chamando o m√©todo 
            cs.cadastrarCliente(cVO);
            
            JOptionPane.showMessageDialog(
                    rootPane, 
                    "Cliente cadastrado com sucesso!");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Erro! "+e.getMessage(),
                    "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
        
        jtNome.setBackground(Color.white);
        jtCpf.setBackground(Color.white);
        jtComplemento.setBackground(Color.white);
        jtNumero.setBackground(Color.white);
        jtEndereco.setBackground(Color.white);
    }
    
    private void limpar() {
        jtNome.setText(null);
        jtEndereco.setText(null);
        jtComplemento.setText(null);
        jtNumero.setText(null);
        jtCpf.setText(null);
    }
    
    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        cadastrar();
        limpar();
        jtNome.grabFocus();
    }//GEN-LAST:event_jbCadastrarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        limpar();
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbCadastrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCadastrarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cadastrar();
            limpar();
            jtNome.grabFocus();
        }
    }//GEN-LAST:event_jbCadastrarKeyPressed

    private void jbLimparKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbLimparKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            limpar();
        }
    }//GEN-LAST:event_jbLimparKeyPressed

    private void jtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtEndereco.grabFocus();
        }
    }//GEN-LAST:event_jtNomeKeyPressed

    private void jtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNomeFocusLost
        if (jtNome.getText().isEmpty()) {
            jtNome.setBackground(Color.RED);
        } else {
            jtNome.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_jtNomeFocusLost

    private void jtEnderecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtEnderecoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtComplemento.grabFocus();
        }
    }//GEN-LAST:event_jtEnderecoKeyPressed

    private void jtEnderecoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtEnderecoFocusLost
        if (jtEndereco.getText().isEmpty()) {
            jtEndereco.setBackground(Color.RED);
        } else {
            jtEndereco.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_jtEnderecoFocusLost

    private void jtComplementoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtComplementoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtNumero.grabFocus();
        }
    }//GEN-LAST:event_jtComplementoKeyPressed

    private void jtComplementoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtComplementoFocusLost
        if (jtComplemento.getText().isEmpty()) {
            jtComplemento.setBackground(Color.RED);
        } else {
            jtComplemento.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_jtComplementoFocusLost

    private void jtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNumeroKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtCpf.grabFocus();
        }
    }//GEN-LAST:event_jtNumeroKeyPressed

    private void jtNumeroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNumeroFocusLost
        if (jtNumero.getText().isEmpty()) {
            jtNumero.setBackground(Color.RED);
        } else {
            jtNumero.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_jtNumeroFocusLost

    private void jtCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCpfKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jbCadastrar.grabFocus();
        }
    }//GEN-LAST:event_jtCpfKeyPressed

    private void jtCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCpfFocusLost
        if (jtCpf.getText().isEmpty()) {
            jtCpf.setBackground(Color.RED);
        } else {
            jtCpf.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_jtCpfFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JLabel jlComplemento;
    private javax.swing.JLayeredPane jlConfirmacao;
    private javax.swing.JLabel jlCpf;
    private javax.swing.JLayeredPane jlDados;
    private javax.swing.JLabel jlEndereco;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlNumero;
    private javax.swing.JTextField jtComplemento;
    private javax.swing.JTextField jtCpf;
    private javax.swing.JTextField jtEndereco;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtNumero;
    // End of variables declaration//GEN-END:variables
}
