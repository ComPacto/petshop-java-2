/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import modelo.AnimalVO;
import servicos.AnimalServicos;

/**
 *
 * @author ASUS
 */
public class GUICadAnimal extends javax.swing.JInternalFrame {

    /**
     * Creates new form GuiCadAnimal
     */
    public GUICadAnimal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlDados = new javax.swing.JLayeredPane();
        jlNome = new javax.swing.JLabel();
        jlRaca = new javax.swing.JLabel();
        jlIdade = new javax.swing.JLabel();
        jlPeso = new javax.swing.JLabel();
        jlDono = new javax.swing.JLabel();
        jtNome = new javax.swing.JTextField();
        jtRaca = new javax.swing.JTextField();
        jtIdade = new javax.swing.JTextField();
        jtPeso = new javax.swing.JTextField();
        jtDono = new javax.swing.JTextField();
        jlConfirmar = new javax.swing.JLayeredPane();
        jbCadastrar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro do Pet");

        jlDados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jlNome.setText("Nome:");

        jlRaca.setText("Ra√ßa:");

        jlIdade.setText("Idade:");

        jlPeso.setText("Peso:");

        jlDono.setText("Dono:");

        jtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNomeFocusLost(evt);
            }
        });
        jtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNomeKeyPressed(evt);
            }
        });

        jtRaca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtRacaFocusLost(evt);
            }
        });
        jtRaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtRacaKeyPressed(evt);
            }
        });

        jtIdade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtIdadeFocusLost(evt);
            }
        });
        jtIdade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtIdadeKeyPressed(evt);
            }
        });

        jtPeso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtPesoFocusLost(evt);
            }
        });
        jtPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtPesoKeyPressed(evt);
            }
        });

        jtDono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtDonoFocusLost(evt);
            }
        });
        jtDono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtDonoKeyPressed(evt);
            }
        });

        jlDados.setLayer(jlNome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jlRaca, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jlIdade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jlPeso, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jlDono, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jtNome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jtRaca, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jtIdade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jtPeso, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlDados.setLayer(jtDono, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlDadosLayout = new javax.swing.GroupLayout(jlDados);
        jlDados.setLayout(jlDadosLayout);
        jlDadosLayout.setHorizontalGroup(
            jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlDadosLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jlDadosLayout.createSequentialGroup()
                        .addComponent(jlNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jlDadosLayout.createSequentialGroup()
                        .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlIdade)
                            .addComponent(jlPeso)
                            .addComponent(jlDono)
                            .addComponent(jlRaca))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtRaca, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(jtDono)
                            .addComponent(jtPeso)
                            .addComponent(jtIdade))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jlDadosLayout.setVerticalGroup(
            jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlDadosLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNome)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlRaca)
                    .addComponent(jtRaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlIdade)
                    .addComponent(jtIdade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlPeso)
                    .addComponent(jtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlDono)
                    .addComponent(jtDono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jlConfirmar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jbCadastrar.setText("Cadastrar");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });
        jbCadastrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCadastrarKeyPressed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });
        jbLimpar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbLimparKeyPressed(evt);
            }
        });

        jlConfirmar.setLayer(jbCadastrar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlConfirmar.setLayer(jbLimpar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlConfirmarLayout = new javax.swing.GroupLayout(jlConfirmar);
        jlConfirmar.setLayout(jlConfirmarLayout);
        jlConfirmarLayout.setHorizontalGroup(
            jlConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlConfirmarLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jbCadastrar)
                .addGap(27, 27, 27)
                .addComponent(jbLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jlConfirmarLayout.setVerticalGroup(
            jlConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jlConfirmarLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jlConfirmarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCadastrar)
                    .addComponent(jbLimpar))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlDados)
                    .addComponent(jlConfirmar))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void cadastrar() {
        try {
            AnimalVO aVO = new AnimalVO();
            aVO.setNome(jtNome.getText());
            aVO.setRaca(jtRaca.getText());
            aVO.setIdade(Byte.parseByte(jtIdade.getText()));
            aVO.setPeso(Double.parseDouble(jtPeso.getText()));
            aVO.setDono(jtDono.getText());
            
            //Enviando o objeto pVO para o banco de dados
            AnimalServicos as = servicos.ServicosFactory.getAnimalServicos();
            //Chamando o m√©todo 
            as.cadastrarAnimal(aVO);
            
            JOptionPane.showMessageDialog(
                    rootPane, 
                    "Animal cadastrado com sucesso!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Erro! "+e.getMessage(),
                    "ERRO",
                    JOptionPane.ERROR_MESSAGE);
        }
        
            jtNome.setBackground(Color.white);
            jtRaca.setBackground(Color.white);
            jtPeso.setBackground(Color.white);
            jtDono.setBackground(Color.white);
            jtIdade.setBackground(Color.white);
        
    }
    
    private void limpar() {
        jtNome.setText(null);
        jtRaca.setText(null);
        jtIdade.setText(null);
        jtPeso.setText(null);
        jtDono.setText(null);
    }
    
    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        cadastrar();
        limpar();
        jtNome.grabFocus();
    }//GEN-LAST:event_jbCadastrarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        limpar();
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbCadastrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCadastrarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cadastrar();
            limpar();
            jtNome.grabFocus();
        }
    }//GEN-LAST:event_jbCadastrarKeyPressed

    private void jbLimparKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbLimparKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            limpar();
        }
    }//GEN-LAST:event_jbLimparKeyPressed

    private void jtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtRaca.grabFocus();
        }
    }//GEN-LAST:event_jtNomeKeyPressed

    private void jtRacaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtRacaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtIdade.grabFocus();
        }
    }//GEN-LAST:event_jtRacaKeyPressed

    private void jtIdadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtIdadeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtPeso.grabFocus();
        }
    }//GEN-LAST:event_jtIdadeKeyPressed

    private void jtPesoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPesoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtDono.grabFocus();
        }
    }//GEN-LAST:event_jtPesoKeyPressed

    private void jtDonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDonoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jbCadastrar.grabFocus();
        }
    }//GEN-LAST:event_jtDonoKeyPressed

    private void jtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNomeFocusLost
        if (jtNome.getText().isEmpty()) {
            jtNome.setBackground(Color.RED);
        } else {
            jtNome.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_jtNomeFocusLost

    private void jtRacaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtRacaFocusLost
        if (jtRaca.getText().isEmpty()) {
            jtRaca.setBackground(Color.RED);
        } else {
            jtRaca.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_jtRacaFocusLost

    private void jtIdadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtIdadeFocusLost
        if (jtIdade.getText().isEmpty()) {
            jtIdade.setBackground(Color.RED);
        } else {
            jtIdade.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_jtIdadeFocusLost

    private void jtPesoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtPesoFocusLost
        if (jtPeso.getText().isEmpty()) {
            jtPeso.setBackground(Color.RED);
        } else {
            jtPeso.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_jtPesoFocusLost

    private void jtDonoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtDonoFocusLost
        if (jtDono.getText().isEmpty()) {
            jtDono.setBackground(Color.RED);
        } else {
            jtDono.setBackground(Color.GREEN);
        }
    }//GEN-LAST:event_jtDonoFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JLayeredPane jlConfirmar;
    private javax.swing.JLayeredPane jlDados;
    private javax.swing.JLabel jlDono;
    private javax.swing.JLabel jlIdade;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlPeso;
    private javax.swing.JLabel jlRaca;
    private javax.swing.JTextField jtDono;
    private javax.swing.JTextField jtIdade;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtPeso;
    private javax.swing.JTextField jtRaca;
    // End of variables declaration//GEN-END:variables
}
